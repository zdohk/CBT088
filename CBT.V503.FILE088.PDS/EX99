*===================================================================CCI    6.
*                                                                   CCI    7.
*     THIS MODULE IS THE INSTALLATION EXIT FOR DYNAMIC              CCI    8.
*     ALLOCATION FOR DATASET ACCESS LEVEL VALIDITY CHECKING.        CCI    9.
*                                                                   CCI   10.
*     THE VOLUME ASSIGNMENT FEATURE OF PCF HAS BEEN REPLACED        CCI   11.
*     WITH PRC CODE TO OBTAIN THE DEFAULT DYNAMIC ALLOCATION        CCI   12.
*     VOLUME FROM THE USER PROFILE TABLE OR COMPUTE A VOLSER        CCI   13.
*     OF TSO'N' WHERE 'N' COMES FROM THE LOW ORDER 4 BITS OF        CCI   14.
*     PSCBATR2+1.  THIS FEATURE PROVIDES THE ABILITY TO MOUNT       CCI   15.
*     TSO PACKS ON ANY DRIVES WITH A MOUNT ATTRIBUTE OF PRIVATE.    CCI   16.
*                                                                   CCI   17.
*     IT HAS BEEN MODIFIED BY PRC-CCI TO RUN EVEN IF THE TSO        CCI   18.
*     USER IS RUNNING A NON-PCF TMP.  OTHER MODIFICATIONS           CCI   19.
*     ARE DESCRIBED IN THE CODE AT LABEL 'AUTHOK'.                  CCI   20.
*                                                                   CCI   21.
*===================================================================CCI   22.
         SPACE 1                                                          23.
IEFDB401 PCFSAVE WORK=NO,TITLE=DYNAMIC_ALLOCATION_INSTALLATION_EXIT       24.
         LR    R2,R1          SAVE PARM REG                               25.
         L     R1,4(R2)       GET ADDR OF WORKAREA ADDR                   26.
         L     R1,0(R1)       GET ADDR OF WORKAREA                        27.
         LR    R8,R1          LOAD WORKAREA BASE REGISTER           CCI   28.
         USING WORKAREA,R8    USE IT                                CCI   29.
         LA    R1,20(R1)      REGISTER SAVEAREA STARTS AT           CCI   30.
*                             WORKAREA+20                           CCI   31.
         ST    R13,4(R1)      SET SAVE LINKAGE                            32.
         ST    R1,8(R13)                                                  33.
         LR    R13,R1                                                     34.
*                                                                         35.
*     LOCATE TCB AND CHECK FOR TSO WITH PCF                               36.
*                                                                         37.
         L     R1,16          GET CVT PTR                                 38.
         L     R1,0(R1)       TCB DOUBLEWORD ADDR                         39.
         L     R1,4(R1)       CURRENT TCB                                 40.
         L     R5,X'B4'(R1)   GET JSCB PTR             TCBJSCB            41.
         ICM   R10,15,X'108'(R5)  GET PSCB PTR FOR TSO JSCBPSCB           42.
         USING PSCB,R10                                                   43.
         BZ    EXITL          IF ZERO, NOT TSO USER                       44.
         MODESET EXTKEY=ZERO   NEED KEY ZERO FOR FETCH PROTECT      CCI   45.
         MVI   PCFIND,X'00'   INIT LOGIC SW TO PCF=YES              CCI   46.
         L     R1,124(R1)     GET JSTCB PTR                               47.
         LA    R15,36(R1)     POINT TO LLS PTR                            48.
MODLP    ICM   R15,15,0(R15)  POINT TO LOAD LIST ELE                      49.
         BNP   NOPCF          EXIT IF END OF LIST                   CCI   50.
         L     R14,4(R15)     GET CDE PTR                                 51.
         CLC   8(8,R14),=C'PCFTBLS ' IS PCF IN SYSTEM                     52.
         BNE   MODLP          LOOP UNTIL FOUND                            53.
         L     R1,112(R1)     GET FSA PTR                                 54.
         L     R11,24(R1)     GET TMPWA PTR FROM REG 1                    55.
         USING TMPWRKA1,R11                                               56.
         L     R4,CPPLPTR     GET CPPL FROM TMPWA                         57.
         USING CPPL,R4                                                    58.
         PCFTEST CPPLECT,R4,,PCFTSO  CHECK FOR PCF                        59.
*                                                                         60.
NOPCF    MVI   PCFIND,X'FF'   SET LOGIC SW FOR PCF=NO               CCI   61.
         B     PCFTSO         ....AND CONTINUE                      CCI   62.
*                                                                         63.
EXITL    SR    R15,R15        GOOD REQUEST                                64.
EXIT     MODESET EXTKEY=SCHED   RETURN TO SCHED KEY                       65.
         L     R13,4(R13)     GET PREV REG 13                             66.
         L     R14,12(R13)    GET REG 14                                  67.
         LM    R0,R12,20(R13) RESTORE REGS                                68.
         BR    R14            RETURN                                      69.
*                                                                         70.
*     CHECK PARAMETER LIST FOR ALLOCATION BY DSNAME AND LOCATE            71.
*     NECESSARY TEXT UNITS                                                72.
*                                                                         73.
PCFTSO   L     R3,0(R2)       POINT TO PARM BLOCK                         74.
         USING S99RB,R3                                                   75.
         CLI   S99VERB,S99VRBAL  CHECK FOR ALLOCATION REQUEST             76.
         BNE   EXITL          NO,EXIT                                     77.
         L     R6,S99TXTPP    GET ADDR OF TXT UNIT PTRS                   78.
         USING S99TUPL,R6                                                 79.
         XC    DSNA(ENDWORK-DSNA),DSNA  CLEAR UNIT SAVE AREA              80.
LSTLOOP  ICM   R7,7,S99TUPL+1  GET A TEXT UNIT ADDRESS                    81.
         BZ    ETXTCK         SKIP NULL ENTRIES                           82.
         USING S99TUNIT,R7                                                83.
         CLI   S99TUKEY+1,DALSSREQ  IS THIS SUBSYSTEM REQ                 84.
         BE    EXITL          YES, ASSUME OK                              85.
         CLI   S99TUKEY+1,DALDSNAM  IS THIS DSNAME KEY                    86.
         BNE   NODSN          NO                                          87.
         ST    R7,DSNA        SAVE UNIT ADDR                              88.
NODSN    CLI   S99TUKEY+1,DALSTATS  IS THIS STATUS KEY                    89.
         BNE   NOSTAT           NO                                        90.
         MVC   STAT,S99TUPAR  SAVE STATUS PARM                            91.
NOSTAT   CLI   S99TUKEY+1,DALNDISP  IS THIS NORMAL DISP                   92.
         BNE   NONDSP         NO                                          93.
         MVC   NRMT,S99TUPAR  SAVE NORMAL DISP PARM                       94.
NONDSP   CLI   S99TUKEY+1,DALCDISP  IS THIS CONDITIONAL DISP              95.
         BNE   NOCDSP         NO                                          96.
         MVC   CNDT,S99TUPAR  SAVE CONDITIONAL DISP PARM                  97.
NOCDSP   CLI   S99TUKEY+1,DALVLSER  IS THIS A VOL KEY                     98.
         BNE   CKU1           NO                                    CCI   99.
         ST    R7,VOLT        SAVE ADDR OF KEY ADDRESS                   100.
CKU1     CLI   S99TUKEY+1,DALUNIT   IS THIS UNIT KEY ?              CCI  101.
         BNE   ETXTCK         NO                                    CCI  102.
         ST    R7,TOUNIT      SAVE 'UNIT' TXT UNIT ADDR             CCI  103.
ETXTCK   TM    S99TUPL,X'80'  LAST TEXT UNIT                             104.
         BO    ENDTXT         IF NEGATIVE, YES                           105.
         LA    R6,4(R6)       GET NEXT TEXT PTR                          106.
         B     LSTLOOP        LOOP                                       107.
*                                                                        108.
*     BEGIN DSNAME VALIDATION                                            109.
*                                                                        110.
ENDTXT   ST    R6,TUEND       SAVE ADDR OF LAST TEXT UNIT                111.
         CLI   PCFIND,X'FF'   DOES SW SAY PCF=NO ??                 CCI  112.
         BO    AUTHOK         YES - NO PCF PROCESSING               CCI  113.
         ICM   R7,15,DSNA     GET DSNAME UNIT ADDR                       114.
         BZ    AUTHOK         NONE, ASSUME TEMP                     CCI  115.
         CLI   S99TULNG+1,0   PRESENT, CK LENGTH ZERO DSNAME             116.
         BE    AUTHOK         ASSUME TEMP                           CCI  117.
         CLI   S99TUPAR,C'&&' IS DSNAME TEMPORARY                        118.
         BE    AUTHOK         YES, NO AUTH CHECK OR VOLUME CHECK    CCI  119.
         CLI   S99TUPAR,C' '  DSNAME BLANK                               120.
         BE    AUTHOK         YES, ASSUME TEMP                      CCI  121.
         CLC   S99TULNG(10),NULLF  IS DSNAME NULLFILE                    122.
         BE    EXITL          YES, EXIT                                  123.
         IC    R1,PSCBATR2    GET FIRST USERDATA BYTE                    124.
         SLL   R1,28          CLEAR COMMAND AUTH BITS                    125.
         SRA   R1,28          REPOSITION AND CK ZERO                     126.
         BZ    AUTHOK         IF ZERO, CHK NO FURTHER                    127.
         STC   R1,CODE        SAVE CODE IN WORKAREA                      128.
         CLC   PSCBUSER+7(1),S99TULNG+1  IS DSN < USERID                 129.
         BH    NOUSPFX        YES                                        130.
         ICM   R1,1,PSCBUSER+7  GET USERID LENGTH                        131.
         BZ    NOUSPFX        IF BACKGROUND, MOVE ON                     132.
         BCTR  R1,0           REDUCE FOR EXECUTE                         133.
         EX    R1,USRIDC      COMPARE DSNAME TO USERID                   134.
         BNE   NOUSPFX        NO MATCH                                   135.
         LA    R1,S99TUPAR(R1)  INCREMENT PAST USERID                    136.
         CLI   1(R1),C'.'     CHECK FOR PERIOD                           137.
         BE    USRID          ASSUME USERID PREFIXED                     138.
*                                                                        139.
*     VALIDATE AGAINST SYSTEM AND RESTRICTED NAME TABLES                 140.
*                                                                        141.
NOUSPFX  L     R15,PCFSYSP    POINT TO SYSTEM PREFIX TABLE               142.
         BAL   R14,CKPFX      CHECK DSNAME AGAINST ENTRIES               143.
         B     NOSYS          IMMEDIATE RETURN MEANS NO MATCH            144.
         TM    STAT,X'08'      MATCH FOUND, IS IT SHR ACCESS             145.
         BZ    CKPERM         NO, OLD REQUIRES LEVEL 0                   146.
         CLI   CODE,1           IS ACCESS CODE 1                         147.
         BH    CKPERM         IF NOT ONE, NOT HIGH ENOUGH                148.
         B     AUTHOK         IF ONE, OK                                 149.
NOSYS    L     R15,PCFDSNS    POINT TO TABLE OF RESTRICTED NAMES         150.
         BAL   R14,CKPFX      GO CHECK DSNAME                            151.
         B     NOSTRCT        NO MATCLIFOUND                             152.
         CLI   CODE,2           MATCH, IS USER LEVEL 2                   153.
         BNH   AUTHOK         YES, OK                                    154.
         TM    STAT,X'08'  IS SHR ACCESS REQUESTED                       155.
         BZ    CKPERM         NO, USER NOT HIGH ENOUGH                   156.
         CLI   CODE,3           IS USER LEVEL 3                          157.
         BH    CKPERM         YES, HIGH ENOUGH FOR SHR RESTR             158.
NOSTRCT  CLI   CODE,4           NO, MUST BE LEVEL 4 OR LESS              159.
         BNH   AUTHOK         USER OK FOR GENERAL OS REFERENCE           160.
         TM    STAT,X'08'  IS REFERENCE SHR                              161.
         BZ    CKPERM         NO, NOT HIGH ENOUGH LEVEL                  162.
         CLI   CODE,5           LEVEL 5 WILL HANDLE SHR REQUESTS         163.
         BH    CKPERM         IF NOT THAT HIGH, ERROR                    164.
USRID    CLI   CODE,6           IS USER LEVEL 6 OR LESS                  165.
         BNH   AUTHOK         YES, OK FOR USERID PREFIX                  166.
*                                                                        167.
*     IF DSNAME IS ALREADY ALLOCATED (BY LOGON)                          168.
*     ALLOW ACCESS AT THE SAME OR LOWER LEVEL                            169.
*                                                                        170.
CKPERM   L     R5,X'15C'(R5)  GET ACTIVE JSCB PTR      JSCBACT           171.
         L     R5,X'140'(R5)  GET QDB FOR DSAB CHAIN   JSCDSABQ          172.
         ICM   R5,15,X'0C'(R5)  GET FIRST DSAB PTR     DSQFRSTP          173.
DSELP    BZ    AUTHMESS       ERROR IF END OF DSABS                      174.
         USING DSAB,R5                                                   175.
         TM    DSABFLG1,DSABPALC    MUST BE PERMANENTLY ALLOC            176.
         BNO   DSEINC         NO, SKIP TO NEXT                           177.
         L     R14,DSABSIOT  GET ADDRESS OF SIOT                         178.
         L     R15,X'9C'(R14)  GET ADDRESS OF JFCB     SJFCBPTR          179.
         LH    R1,S99TULNG    GET DSNAME LENGTH                          180.
         BCTR  R1,0           REDUCE FOR EXECUTE                         181.
         EX    R1,DSECMP      COMPARE TO DSNAME IN JFCB                  182.
         BE    DSCHKD         YES, DOUBLE CHECK                          183.
         TM    X'2E'(R14),X'80'  CHECK FOR ALIAS                         184.
         BNO   DSEINC         NO, SKIP                                   185.
         L     R15,X'A0'(R14) GET JFCB EXTENSION                         186.
         EX    R1,DSACMP      CHECK ALIAS                                187.
         BNE   DSEINC         NO MATCH                                   188.
DSCHKD   LA    R1,1(R15,R1)   DOUBLE CHECK MATCH                         189.
         TM    0(R1),255-C' ' FOR FULL DSN(FLWD BY C' ' OR X'00')        190.
         BNZ   DSEINC         NO, MOVE ON                                191.
         TM    NRMT,7         CHECK DISP FOR KEEP                        192.
         BNZ   AUTHMESS       NO, ERROR                                  193.
         TM    CNDT,7         CHK COND DISP FOR KEEP                     194.
         BNZ   AUTHMESS       NO, ERROR                                  195.
         CLI   STAT,4         IS REQUEST FOR NEW                         196.
         BE    AUTHMESS       YES, ERROR                                 197.
         BH    EXITL          IF SHR, OK                                 198.
         TM    87(R15),8      IS CURRENT ALLOC STATUS SHARED             199.
         BZ    EXITL          NO, ALLOW EXCLUSIVE      JFCFIND2          200.
DSEINC   ICM   R5,15,4(R5)    GET NEXT DSAB PTR                          201.
         B     DSELP          LOOP                                       202.
         DROP  R5                                                        203.
  EJECT                                                                  204.
*===================================================================CCI  205.
*                                                                   CCI  206.
*     PRC COMPUTER CENTER - LOCAL MODIFICATIONS                     CCI  207.
*                                                                   CCI  208.
*         1.  IF ALLOCATION IS NOT 'NEW' DATASET, EXIT              CCI  209.
*         2.  IF (NEW,DELETE), THEN NULLIFY ANY VOLSER AND          CCI  210.
*             SET UNIT=SYSDA.                                       CCI  211.
*         3.  IF NORMAL DISP NOT DELETE, SET VOLSER TO              CCI  212.
*             VOLSER (IF IT EXISTS) FOUND IN THE UPT (SET WITH      CCI  213.
*             THE SETVOL COMMAND), OTHERWISE GENERATE THE DEFAULT   CCI  214.
*             VOLUME OF TSO'N' WHERE 'N' IS THE LOW ORDER 4 BITS    CCI  215.
*             OF FIELD PSCBATR2+1.                                  CCI  216.
*                                                                   CCI  217.
*===================================================================CCI  218.
         SPACE 1                                                         219.
AUTHOK   TM    STAT,X'04'     IS REQUEST NEW                        CCI  220.
         BZ    EXITL          NO, GET OUT                           CCI  221.
         TM    NRMT,X'04'    NORMAL DISP = DELETE ?                 CCI  222.
         BZ    NODELE        NO                                     CCI  223.
*                                                                   CCI  224.
*     DATASET IS (NEW,DELETE) - SEND IT TO SYSDA                    CCI  225.
*                                                                   CCI  226.
         ICM   R7,15,VOLT    GET VOLSER TEXT UNIT                   CCI  227.
         BZ    NOVOL         DOESN'T EXIST - FINE                   CCI  228.
         MVI   S99TUKEY+1,X'00'    NULLIFY VOLSER TEXT UNIT         CCI  229.
NOVOL    ICM   R7,15,TOUNIT  GET 'UNIT' TEXT UNIT                   CCI  230.
         BZ    NEEDU         NOT THERE - FINE                       CCI  231.
         MVI   S99TUKEY+1,X'00'    NULLIFY 'UNIT' TEXT UNIT         CCI  232.
NEEDU    MVC   UTEXT(14),USYSDA    MOVE UNIT=SYSDA TXT UNIT         CCI  233.
         LA    R7,UTEXT      POINT TO 'UNIT' TEXT UNIT              CCI  234.
         BAL   R15,EXTUN     HANG ON END OF TU PTR LIST             CCI  235.
         B     EXITL         FINI - RETURN                          CCI  236.
*                                                                   CCI  237.
*    DATASET NEW BUT NOT DELETE - CONTROL WHERE IT GOES             CCI  238.
*                                                                   CCI  239.
NODELE   EQU   *                                                    CCI  240.
         ICM   R7,15,VOLT    GET ADDR OF 'VOLSER' TEXT UNIT         CCI  241.
         BNZ   EXITL         ITS THERE - DON'T SET DEFAULT          CCI  242.
         MVC   VOLU(12),UVOLSER   SKELETON 'VOLSER' TXT UNIT        CCI  243.
         L     R7,PSCBUPT    POINT TO UPT FOR DEFAULT     VOL ?     CCI  244.
         CLI   0(R7),X'00'  USER DEFAULT ??                         CCI  245.
         BNE   PRIVATU       YES, GO USE IT FOR THIS REQUEST        CCI  246.
         TM    PSCBATR2+1,X'0F'      IS THERE AN DEFAULT ??         CCI  247.
         BZ    NODEF                 NO, INFORM AND QUIT            CCI  248.
         SR    R7,R7         CLEAR WORKREG                          CCI  249.
         IC    R7,PSCBATR2+1 GET DEFAULT TSO PACK NO.               CCI  250.
         CVD   R7,CVTD       MAKE IT                                CCI  251.
         UNPK  CVTD(1),CVTD+7(1)  SOMEWHAT                               252.
         OI    CVTD,X'F0'    .....USEABLE                           CCI  253.
         MVC   VOLU+6(6),=CL6'TSO'    SET TSO PACK DEFAULT          CCI  254.
         MVC   VOLU+9(1),CVTD         ADD UNIQUE ID                 CCI  255.
         B     SETU          STRING IT ON                           CCI  256.
PRIVATU  MVC   VOLU+6(6),0(R7)        SET USERS DEFAULT ALLOC VOL   CCI  257.
         SPACE 1                                                    CCI  258.
SETU     EQU   *                                                    CCI  259.
         LA    R7,VOLU       POINT TO DEFAULT VOLUME TXT UNIT       CCI  260.
         ST    R7,VOLT       RECORD THE FACT WE NOW HAVE ONE        CCI  261.
         BAL   R15,EXTUN     ADD TXT UNIT POINTER TO END            CCI  262.
         B     EXITL         ALL DONE - EXIT                        CCI  263.
*                                                                        264.
*     THE FOLLOWING CODE IS USED TO ADD A TEXT UNIT POINTER              265.
*     TO THE END OF THE TEXT UNIT POINTER LIST AND RESET THE             266.
*     NEW 'END OF LIST'.                                                 267.
*                                                                        268.
EXTUN    L     R6,TUEND      GET END OF TEXT UNIT LIST PTR               269.
         MVI   S99TUPL,0     CLEAR LIST END INDIC                        270.
         LA    R6,4(R6)      ADD NEW UNIT                                271.
         MVI   S99TUPL,X'80' SET NEW LIST END                            272.
         ST    R6,TUEND      SAVE NEW END OF TXT U PTRS             CCI  273.
         STCM  R7,7,S99TUPL+1   CHAIN IN NEW TEXT UNIT              CCI  274.
         BR    R15           RETURN                                 CCI  275.
*                                                                   CCI  276.
*     USER DOES NOT HAVE A DEFAULT TSO ALLOCATION VOLUME.           CCI  277.
*     INFORM HIM OF THIS AND QUIT.                                  CCI  278.
*                                                                   CCI  279.
NODEF    EQU   *                                                    CCI  280.
     TPUT CCIVMSG,L'CCIVMSG                                         CCI  281.
         LA    R15,4                                                CCI  282.
         B     EXIT          STOP ALLOCATION                        CCI  283.
         EJECT                                                           284.
*                                                                        285.
*     THIS CLOSED ROUTINE CHECKS A PCF TABLE LIST                        286.
*     OF SYSTEM OR RESTRICTED DATASET PREFIXES AGAINST DSNAME            287.
*          MATCH FOUND - RETURN ON REG 14+4                              288.
*          NO MATCH - RETURN REG 14                                      289.
*                                                                        290.
         USING S99TUNIT,R7                                               291.
CKPFX    ICM   R1,3,0(R15)        GET NUMBER OF ENTRIES                  292.
         BZ    CKSYSOK            IF NONE, EXIT                          293.
         LA    R1,41*2            GET LENGTH OF INDEX TABLE              294.
         CLI   S99TUPAR,C'A'      CHECK DSNAME FIRST CHAR                295.
         BL    CKBEGN             IF NATIONAL CHAR, START BEGIN          296.
         CLI   S99TUPAR,C'Z'      IS DSNAME VALID                        297.
         BH    CKSYSOK            NO, EXIT                               298.
         IC    R1,S99TUPAR        GET FIRST CHARACTER                    299.
         SH    R1,=H'193'         BACK UP TO MATCH TABLE                 300.
         SLL   R1,1               DOUBLE FOR HALFWORD ENTRIES            301.
         AR    R1,R15             MOVE TO INDEX ENTRY                    302.
         LH    R1,2(R1)           GET INDEX VALUE                        303.
         LTR   R1,R1              ANY ENTRIES FOR THIS CHAR              304.
         BZ    CKSYSOK            NONE, EXIT                             305.
CKBEGN   AR    R15,R1             MOVE TO FIRST ENTRY WITH CHAR          306.
         SR    R1,R1              CLEAR REG                              307.
CKLSP    IC    R1,2(R15)          GET LENGTH OF ENTRY                    308.
         CH    R1,S99TULNG        COMPARE WITH DSNAME LENGTH             309.
         BCTR  R1,0               REDUCE FOR EXECUTE                     310.
         BH    CKINC1             IF PREFIX GREATER, SKIP                311.
         EX    R1,DSNCMP          CHECK FOR MATCH                        312.
         BE    CKSYSER            FOUND ONE                              313.
         BL    CKSYSOK            PAST END OF TABLE                      314.
CKINC    LA    R15,2(R1,R15)      INCREMENT PAST ENTRY                   315.
         CLI   3(R15),C'/'        IS NEXT ENTRY EXCEPTION                316.
         BNE   CKLSP              NO, LOOP TO NEXT ENTRY                 317.
         IC    R1,2(R15)          GET LENGTH OF EXCEPTION                318.
         BCTR  R1,0           ADJUST LENGTH                      PCF032  319.
         B     CKINC              GO SKIP ENTRY                          320.
CKINC1   CLC   S99TUPAR(1),3(R15) PAST POSSIBLE ENTRY                    321.
         BNL   CKINC              NO, MOVE ON                            322.
CKSYSOK  BR    R14                RETURN NO MATCH                        323.
CKSYSER  BCTR  R15,0              DECR TO FORCE EQ EXCPT CMP             324.
         CLC   PSCBUSER+7(1),3(R15)  PREFIX LONGER THAN USERID           325.
         BL    CKEXCPT            YES, CHECK EXCEPTIONS                  326.
         EX    R1,USDCMP          COMPARE PREFIX TO USERID               327.
         BNE   CKEXCPT            NO, MOVE TO EXCEPTIONS                 328.
CKNLSP   EX    R1,DSNCMPN         CHECK EXCEPTIONS                       329.
         BE    CKSYSOK            MATCH, NOT RESTR                       330.
         BL    CKSYSNO            PAS POSSIBLE ENTRY                     331.
CKEXCPT  LA    R15,3(R1,R15)      INCREMENT TO NEXT ENTRY                332.
         CLI   3(R15),C'/'        IS IT EXCEPTION                        333.
CKSYSNO  BNE   4(R14)             NO, MATCH FOUND                        334.
         IC    R1,2(R15)          YES, GET LENGTH                        335.
         SH    R1,=H'2'           REDUCE FOR SLASH AND EXEC              336.
         B     CKNLSP             LOOP                                   337.
*                                                                        338.
*     IF ACCESS REQUEST IS UNAUTHORIZED, ISSUE MESSAGE AND EXIT          339.
*                                                                        340.
AUTHMESS MVC   MSGA,AUTHMSG          MOVE MSG TO WORKAREA                341.
         LA    R9,MSGA               SET ADDRESSIBILITY                  342.
         USING AUTHMSG,R9                                                343.
         LA    R1,AUTHMSG1           RELOCATE OUTPUT LINE DESC           344.
         ST    R1,AUTHMSG                                                345.
         LA    R1,AUTHMSGA                                               346.
         ST    R1,AUTHMSG+8                                              347.
         LA    R1,AUTHMSGB                                               348.
         ST    R1,AUTHMSG1+8                                             349.
         MVN   AUTHMSB2(1),CODE   GET AUTH DIGIT FOR MSG                 350.
         MVC   AUTHMSB3(44),S99TUPAR GET UNAUTH DSNAME                   351.
         LH    R1,AUTHMSGB      GET LENGTH WITHOUT DSNAME                352.
         AH    R1,S99TULNG         ADD DSNAME LENGTH                     353.
         STH   R1,AUTHMSGB      RESORE UPDATED LENGTH                    354.
         LA    R1,AUTHMSGB(R1)    POINT TO END OF MSG                    355.
         LA    R0,X'80'       SET ROUTCDE=9                              356.
         STCM  R0,15,0(R1)    SET ROUTINE AND DESC CODES                 357.
         L     R1,IOPLPTR       GET IOPL ADDR                            358.
         PUTLINE PARM=PUTL,TERMPUT=EDIT,MF=(E,(1)), *************   **** 359.
               OUTPUT=(AUTHMSG,TERM,MULTLVL,INFOR)                       360.
         PCFERR ERREXIT,IKJPUTL,4  IF RET CODE GT 4, ERROR               361.
         OI    AUTHMSGB+2,X'80'  SET MCS FLAGS                           362.
         MVC   AUTHMSB1(7),PSCBUSER  GET USERID                          363.
         WTO   MF=(E,AUTHMSGB)  LOG ATTEMPT TO SECURITY CONSOLE          364.
         DROP  R9                                                        365.
         XC    PUTL(8),PUTL   CLR STACK LIST                     PCF032  366.
         L     R1,IOPLPTR     GET IOPL                           PCF032  367.
         STACK  PARM=PUTL,DELETE=ALL,MF=(E,(1))                  PCF032  368.
         PCFERR ERREXIT,IKJSTCK  CHECK FOR ERROR                 PCF032  369.
         LA    R15,4           SET INSTALLATION EXIT REJECT              370.
         B     EXIT               EXIT                                   371.
*                                                                        372.
ERREXIT MVC    MSGA(CMDERR2+2-CMDERR),CMDERR  MOVE ERRMSG TO WORK        373.
        LA     R9,MSGA            SET ADDRESSIBILITY                     374.
        USING  CMDERR,R9                                                 375.
        MVC    CMDERR1(8),0(R1)   MOVE IN ROUTINE NAME                   376.
        UNPK   CMDERR2(3),RCODE+3(2)  ADD ZONES TO HEX RET CODE          377.
        TR     CMDERR2(2),TRANS-240  CORRECT ZONES FOR A-F               378.
        TPUT   (R9),CMDERR2+2-CMDERR  PUT ERR MSG                        379.
        DROP   R9                                                        380.
        LA     R15,4              SET BAD PARM RET CODE                  381.
        B      EXIT               EXIT                                   382.
        LTORG  ,                                                         383.
*                                                                        384.
*     CONSTANTS, MESSAGES, AND EXECUTED INSTRUCTIONS                     385.
*                                                                        386.
AUTHMSG  DC    A(AUTHMSG1,1,AUTHMSGA)                                    387.
AUTHMSG1 DC    A(0,1,AUTHMSGB)                                           388.
AUTHMSGA DC    Y(L'AUTHMSA1+4,0)                                         389.
AUTHMSA1 DC    C'PCF002 UNAUTHORIZED FILE ACCESS ATTEMPTED+'             390.
AUTHMSGB DC    Y(AUTHMSB3-AUTHMSGB,0)                                    391.
AUTHMSB1 DC    C' USERID DATASET ACCESS CODE '                           392.
AUTHMSB2 DC    C'0 DISALLOWS REQUESTED ACCESS TO '                       393.
AUTHMSB3 EQU   *    PLUSS 44 BYTES FOR DSNAME                            394.
CMDERR   DC    C'PCF010 COMMAND SYSTEM ERROR - PCFALOC '                 395.
CMDERR1  DC    C'XXXXXXXX ERROR CODE '                                   396.
CMDERR2  DC    C'XX '                                                    397.
TRANS    DC    C'0123456789ABCDEF'                                       398.
NULLF    DC    AL2(8),C'NULLFILE'  DUMMY TEXT UNIT                       399.
CCIVMSG DC C'NO DEFAULT ALLOCATION VOLUME.  ISSUE ''SETVOL''.'           400.
*                                                                   CCI  401.
USYSDA   DC    X'0015',X'0001',X'0008',CL8'SYSDA   '                CCI  402.
UVOLSER  DC    X'0010',X'0001',X'0006',CL6'      '                  CCI  403.
*                                                                   CCI  404.
USRIDC   CLC   PSCBUSER(*-*),S99TUPAR  COMPARE DSNAME TO USERID          405.
DSECMP   CLC   S99TUPAR(*-*),0(R15)    COMPARE DSNAMES                   406.
DSACMP   CLC   S99TUPAR(*-*),60(R15)   COMPARE WITH ALIAS                407.
DSNCMP   CLC   S99TUPAR(*-*),3(R15)    CHK DSN AGAINST LIST ENT          408.
USDCMP   CLC   PSCBUSER(*-*),4(R15)    USERID TO PREFIX                  409.
DSNCMPN  CLC   S99TUPAR(*-*),4(R15)    EXCEPTIONS TO DSNAME              410.
         EJECT                                                           411.
*================================================================        412.
*                                                                        413.
*     DSECTS FOR WORKAREAS AND PARAMETER LISTS                           414.
*                                                                        415.
*================================================================        416.
         SPACE 1                                                         417.
WORKAREA DSECT                                                           418.
         DS    5F                 TXT UNIT PTR EXPANSION            CCI  419.
         DS    18F                REGISTER SAVE AREA                     420.
TOUNIT   DS    F                  ADDRESS OF 'UNIT' TXT UNIT        CCI  421.
UTEXT    DS    CL14               'UNIT' TXT UNIT                   CCI  422.
TUEND    DS    F                  ADDR OF LAST TEXT UNIT                 423.
DSNA     DS    F                  ADDR OF DSNAME TEXT UNIT               424.
VOLT     DS    F                  ADDR OF VOL TEXT UNIT ADDR             425.
STAT     DS    X                  ALLOC STATUS REQUEST                   426.
NRMT     DS    X                  REQUESTED DISPOSITION                  427.
CNDT     DS    X                  REQUESTED CONDITIONAL DISPOS           428.
CODE     DS    X                  USER DATASET AUTHOR CODE               429.
VOLU     DS    3F                 PCF AUTH VOL TEXT UNIT                 430.
CVTD     DS    D                  CONVERT TO DECIMAL WORKAREA            431.
PUTL     DS    3F                 PARAMETER LIST FOR PUTLINE             432.
PCFIND   DS    X                  X'00'=YESPCF / X'FF'=NOPCF        CCI  433.
MSGA     DS    CL(AUTHMSB3+44-AUTHMSG)  MSG WORK AREA                    434.
ENDWORK  EQU   *                                                         435.
         PCFCVT                                                          436.
         IKJCPPL                                                         437.
         IKJECT
         IKJTMPWA                                                   */
*        PCFTMPWA                                                        438.
         IKJPSCB                                                         439.
         IEFZB4D0                                                        440.
         IEFZB4D2                                                        441.
         IHADSAB                                                         442.
         END                                                             443.
